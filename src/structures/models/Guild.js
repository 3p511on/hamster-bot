// Файл для создания модели гильдии. Используется в базе данных.
// Настройки бота для определенного Discord-сервера 

// Импортируем класс Sсhema и функцию model из модуля mongoose
// для создания модели гильдии
const { Schema, model } = require('mongoose');
const client = require('../../index');

// Оглашаем новую шему с информацией о гильдии
const GuildSchema = new Schema({

    // ID гильдии
    id: {
        type: String,
        unique: true // Должно быть уникально
    },

    // Является ли гильдия премиум-сервером?
    // На время тестирования используется только на серверах Arizona Games
    // Планируется подключить Patreon для пожертвований
    isPremium: {
        type: Boolean, // Хранит только ДА/НЕТ
        default: false // По умолчанию НЕТ
    },

    // Общие настройки бота
    common: {

        // Префикс используется в начале сообщений для обозначения команд бота
        prefix: {
            type: String,
            maxlength: 20, // Максимальное количество 
            default: '/' // По умолчанию
        },

        // Цвет системных сообщений
        color: {
            type: String,
            default: '#b5ff33'
        }
    },

    // Система выдачи ролей
    giveRole: {

        // Включена ли функция?
        isEnabled: {
            type: Boolean,
            default: false
        },

        // Необходимо для использования системы
        require: {
            channels: Array, // Список каналов, в которых можно управлять ролями
            roles: Array // Список ролей, необходимые для использования системы
        },

        // Игнорируемые каналы/роли
        banned: {
            channels: Array, // Список каналов, которые бот будет игнорировать
            roles: Array // Список ролей, при наличии которой бот будет игнорировать человека
        },

        // Какой из алгоритмов валидации ника использовать?
        // Планируется сделать настройку на сайте в виде изменения позиций, создания своих тэгов
        // Временно используются установленные регулярные выражения, устанавливаются через сайт
        nameRegex: {
            type: String
        },

        // Список слов, на которые бот будет реагировать в указанном канале
        triggerWords: Array,

        // Список тэгов и необходимых ролей для управления данной ролью
        tags: [
            {
                names: Array, // Список названий тэга и его аналогов ["LSPD", "ЛСПД"]
                giveRoles: Array, // Список ролей, которые необходимо выдать
                manageRoles: Array // Список ролей, которые могут ей управлять
            }
        ]
    }
}, {
    // Отключаем использования строки версии в объектах 
    versionKey: false
});


// Эксопортируем модель гильдии
module.exports = model('guilds', GuildSchema);

{
  "Command": {
    "scope": "javascript",
    "prefix": "cmd",
    "body": [
      "const Command = require(\"lib/structures/Command\");",
      "",
      "module.exports = class extends Command {",
      "\tconstructor(...args) {",
      "\t\tsuper(...args, {",
      "\t\t\tname: \"\",",
      "\t\t\taliases: [\"\"],",
      "\t\t\tdescription: \"\",",
      "\t\t\tclientPermissions: [\"\"],",
      "\t\t\tuserPermissions: [\"\"],",
      "\t\t\tguildOnly: true,",
      "\t\t\tdevOnly: false,",
      "\t\t\tnsfw: false,",
      "\t\t});",
      "\t}",
      "",
      "\tasync run(client, message, args, guildData) {",
      "\t\t// ...",
      "\t}",
      "}; ",
      ""
    ],
    "description": "Шаблон для новой команды"
  },
  "Model": {
    "scope": "javascript",
    "prefix": "model",
    "body": [
      "const { Schema, model } = require(\"mongoose\");",
      "",
      "const TestSchema = new Schema(",
      "\t{",
      "\t\t",
      "\t},",
      "\t{",
      "\t\tversionKey: false,",
      "\t}",
      ");",
      "",
      "module.exports = model(\"\", TestSchema); ",
      ""
    ],
    "description": "Шаблон для новой модели"
  },
  "Route": {
    "scope": "javascript",
    "prefix": "route",
    "body": [
      "const { Router } = require(\"express\");",
      "const Route = require(\"lib/structures/Route\");",
      "",
      "module.exports = class extends Route {",
      "\tconstructor(client) {",
      "\t\tsuper(\"\", client);",
      "\t}",
      "",
      "\tregister(app) {",
      "\t\tconst router = Router();",
      "",
      "\t\trouter.get(\"/\", (req, res) => {",
      "\t\t\t// сюда код",
      "\t\t});",
      "",
      "\t\tapp.use(this.path, router);",
      "\t}",
      "}; ",
      ""
    ],
    "description": "Шаблон для новой модели"
  }
}
